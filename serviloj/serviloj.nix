{
	# Inspiration taken from https://github.com/nh2/nixops-tutorial/blob/master/example-nginx-deployment.nix

	network.description = "Our humble all-encompassing serviloj deployment";

	# TODO quota
	# TODO mail
	# TODO monitoring
	
	gently = { config, nodes, lib, pkgs, ... }: {
		imports = [ ./modules/tilaa_vps.nix ];

		deployment.targetHost = "gently.radstand.nl";
		deployment.provisionSSHKey = false;
		
		deployment.keys = {
			"nextcloud-admin" = {
				keyFile = ./. + "/secrets.temp/admin@wolk.radstand.nl";
				user = "nextcloud";
				group = "nextcloud";
				permissions = "ug=r,o=";
			};
		};
		
		# The rest is a configuration just like nixos/configuration.nix
		
		# I set the stateVersion here because I don't want to use the nixops state file.
		# stateVersion starts with 19.09 because that it the version nixos-infect installs.
		# You should only update this if you think there is no (important) state created yet.
		# NOTE: nixops determines the stateVersion based on /etc/os-release
		# on the target machine, so I'm not sure if this setting here has any effect.
		system.stateVersion = "20.03";
		
		services.openssh.enable = true;
		users.users = {
			root = {
				passwordFile = "/root/password"; # must be present on the machine
				openssh.authorizedKeys.keyFiles = [
					../scarif/home/jeroen/.ssh/id_rsa.pub
				];
			};

			# Make sure users have the same uid on all our machines.
			# Add users here that don't have a fixed uid in nixpkgs/nixos.
			# also exist on the machine (actually, in our whole deployment), with a fixed uid.
			# TODO also fix groups
			# Warning: changing uids here after a user has been created has no effect!
			# (I think - the note here was about containers.)
			# You have to rm /var/lib/nixos/uid-map and userdel the user.
			nextcloud = {
				uid = 70000;
				extraGroups = [ "keys" ];
			};
		};

		networking = {
			hostName = "gently";
			firewall = {
				allowPing = true;
				# port 80 is only allowed for Let's Encrypt challenges
				allowedTCPPorts = [ 22 80 443 ];
			};
		};

		services.fail2ban.enable = true;

		security.acme = {
			acceptTerms = true;
			# I'm guessing the rest of the cert config is autogenerated
			# due to the nginx config.
			certs."volgendewolk.radstand.nl".email = "jeroen@lwstn.eu";
		};

		services.nginx = {
			enable = true;
			recommendedGzipSettings = true;
			recommendedOptimisation = true;
			recommendedProxySettings = true;
			recommendedTlsSettings = true;

			virtualHosts = {
				"volgendewolk.radstand.nl" = {
					forceSSL = true;
					enableACME = true;
				};
			};
		};

		services.nextcloud = {
			# TODO take relevant php/nextcloud config from current
			# manual installation

			enable = true;

			package = pkgs.nextcloud20;

			home = "/srv/nextcloud";

			autoUpdateApps = {
				enable = true;
			};

			# when it works, we can replace wolk.radstand.nl
			hostName = "volgendewolk.radstand.nl";
			https = true; # no idea how this relates to config.overwriteProtocol

			maxUploadSize = "512M";

			config = {
				adminuser = "admin";
				adminpassFile = "/run/keys/nextcloud-admin";
				
				dbtype = "sqlite"; # let's start simple
				
				overwriteProtocol = "https";
			};
		};
	};
}
