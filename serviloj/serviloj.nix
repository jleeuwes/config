{
	# Inspiration taken from https://github.com/nh2/nixops-tutorial/blob/master/example-nginx-deployment.nix

	network.description = "Our humble all-encompassing serviloj deployment";
	network.enableRollback = true; # no idea what this does
	
	servilo-1 = { config, nodes, lib, ... }: {
		imports = [
			./modules/machinelike.nix
			./modules/tilaa_vps.nix
		];

		deployment.targetHost = "servilo-1.tilaa.cloud";
		
		# The rest is a configuration just like nixos/configuration.nix
		
		services.openssh.enable = true;
		users.users = {
			root = {
				passwordFile = "/root/password"; # must be present on the machine
				openssh.authorizedKeys.keyFiles = [
					../scarif/home/jeroen/.ssh/id_rsa.pub
				];
			};
			# TODO also copy redmine group
			redmine = config.containers.redmine.config.users.users.redmine;
			# TODO put database(s) on the machine itself and share them between containers
			mysql = config.containers.redmine.config.users.users.mysql;
		};

		networking = {
			hostName = "servilo-1";
			firewall = {
				allowPing = true;
				# port 80 is only allowed for Let's Encrypt challenges
				allowedTCPPorts = [ 22 80 443 ];
			};
		};

		services.fail2ban.enable = true;

		security.acme = {
			# I'm guessing the rest of the cert config is autogenerated
			# due to the nginx config.
			certs."project.radstand.nl".email = "jeroen@lwstn.eu";
		};

		services.nginx = {
			enable = true;
			recommendedGzipSettings = true;
			recommendedOptimisation = true;
			recommendedProxySettings = true;
			recommendedTlsSettings = true;

			virtualHosts = {
				"project.radstand.nl" = {
					forceSSL = true;
					enableACME = true;
					locations."/".proxyPass = "http://localhost:3000";
				};
			};
		};

		containers = {
			redmine = {
				autoStart = true;
				config = { config, pkgs, ... }: {
					imports = [ ./modules/machinelike.nix ];
					
					# nixpkgs is afraid we're locking ourselves out if don't
					# give a root password of if we set it to !
					# But this isn't a problem because this is a container.
					# We get around that with this fake deactivated password.
					users.users.root.hashedPassword = "!this_is_fine";
					
					services.redmine.enable = true;
				};
			};
		};
	};
}
