#!/usr/bin/env bash

set -Eu -o pipefail

high=49
low=10
high_color=#66ff66
mid_color=#ffe040
low_color=#ff6666

alert_color=#ff0000
inverse_color=#000000

power_plug=$(printf '\U1f50c')
battery_empty=$(printf '\U1faab')
battery_full=$(printf '\U1f50b')

blink=$(expr $(date +%s) % 2)

plugged=$(cat /sys/class/power_supply/AC/online)

show_plug() {
	if [[ "$plugged" -eq 1 ]]; then
		printf '%s' "$power_plug"
	else
		printf '  '
	fi
}

show_battery() {
	local bat
	local status
	local percentage
	local icon
	local color
	local output
	bat="$1"
	status=$(cat /sys/class/power_supply/"$bat"/status)
	percentage=$(cat /sys/class/power_supply/"$bat"/capacity)
	if [[ "$percentage" -gt "$high" ]]; then
		icon="$battery_full"
		color="$high_color"
	elif [[ "$percentage" -gt "$low" ]]; then
		icon="$battery_full"
		color="$mid_color"
	else
		icon="$battery_empty"
		if [[ "$plugged" -eq 0 && "$status" = "Discharging" && $blink -eq 1 ]]; then
			color="$inverse_color,$alert_color"
		else
			color="$low_color"
		fi
	fi
	output="$percentage%"
	if [[ "$status" = "Discharging" ]]; then
		output="<box width=2 type=Bottom>$output</box>"
	elif [[ "$status" = "Charging" ]]; then
		output="<box width=2 type=Top>$output</box>"
	fi
	output="$icon<fc=$color>$output</fc>"
	printf '%s' "$output"
}

show_plug
show_battery BAT1
show_battery BAT0
printf '\n'
