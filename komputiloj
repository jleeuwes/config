#!/usr/bin/env bash

set -Eeu -o pipefail

determine_here() {
	(
		cd -- "$(dirname -- "$0")"
		pwd -P
	)
}
export KOMPUTILOJ_PATH=$(determine_here)
printf 'Using KOMPUTILOJ_PATH=%q\n' "$KOMPUTILOJ_PATH" >&2

DEFAULT_NIXOS=nixos_22_05 # the source we use as nixpkgs in nixos-rebuild

main() {
	local cmd
	
	if [[ "$#" -eq 0 ]]; then
		printf 'Usage: %q COMMAND\n' "$0" >&2
		exit 1
	fi

	cmd="$1"
	shift
	case "$cmd" in
		update-sources)
			do_update_sources
		;;
		nixos-rebuild)
			do_nixos_rebuild "$@"
		;;
		deploy)
			do_deploy "$@"
		;;
		update-domains)
			do_update_domains "$@"
		;;
		nixops)
			do_nixops "$@"
		;;
		cleanup)
			do_cleanup "$@"
		;;
		backup)
			do_backup "$@"
		;;
		*)
			printf 'Unknown command %q\n' "$cmd" >&2
		;;
	esac
}

do_update_sources() {
	for source_dir in "$KOMPUTILOJ_PATH"/sources.d/*; do
		if [[ -d "$source_dir" ]]; then
		(
			cd -- "$source_dir"
			if [[ -x update ]]; then
				printf 'Updating source %s\n' "$source_dir" >&2
				./update
			else
				printf 'Skipping source without update script: %s\n' "$source_dir" >&2
			fi
		)
		fi
	done
}

do_nixos_rebuild() {
	local nixpkgs_path

	printf 'Using nixpkgs source %q\n' "$DEFAULT_NIXOS" >&2
	nixpkgs_path=$(nix-instantiate --eval "$KOMPUTILOJ_PATH"/sources.nix -A "$DEFAULT_NIXOS".nix_path | egrep -o '[^"]+')
	printf 'Using implicit current host configuration from /etc/nixos\n' >&2 # TODO just use a (host-specific) dir in KOMPUTILOJ_PATH directly
	export NIX_PATH="komputiloj=$KOMPUTILOJ_PATH:nixpkgs=$nixpkgs_path:nixos-config=/etc/nixos/configuration.nix"
	printf 'Using nixos-rebuild from PATH\n' >&2
	exec sudo -E nixos-rebuild "$@"
}

do_deploy() {
	do_nixops_something "$KOMPUTILOJ_PATH"/serviloj/deploy "$@"
}

do_update_domains() {
	# TODO Take wachtwoord from sources like in do_nixops_something.
	# TODO It's weird to reference serviloj here.
	export TRANSIP_TOKEN=$(wachtwoord cat -n \
		"$KOMPUTILOJ_PATH"/serviloj/secrets/token@api.transip.nl)
	export VERSIO_USER=jeroen@lwstn.eu:$(wachtwoord cat -n \
		"$KOMPUTILOJ_PATH"/serviloj/secrets/jeroen@lwstn.eu@versio.nl)
	for domain_dir in "$KOMPUTILOJ_PATH"/domains.d/*; do
		if [[ -d "$domain_dir" ]]; then
		(
			cd -- "$domain_dir"
			if [[ -x update ]]; then
				printf 'Updating domain %s\n' "$domain_dir" >&2
				./update
			else
				printf 'Skipping domain without update script: %s\n' "$domain_dir" >&2
			fi
		)
		fi
	done
}

do_nixops() {
	do_nixops_something "$KOMPUTILOJ_PATH"/serviloj/command "$@"
}

do_nixops_something() {
	local nixpkgs_path

	printf 'Using nixpkgs source %q\n' "$DEFAULT_NIXOS" >&2
	nixpkgs_path=$(nix-instantiate --eval "$KOMPUTILOJ_PATH"/sources.nix -A "$DEFAULT_NIXOS".nix_path | egrep -o '[^"]+')
	export NIX_PATH="komputiloj=$KOMPUTILOJ_PATH:nixpkgs=$nixpkgs_path"
	export NIXOPS_CMD=nixops
	export NIXOPS_STATE="$KOMPUTILOJ_PATH"/serviloj/state.nixops
	export NIXOPS_DEPLOYMENT=serviloj
	local args_escaped=$(printf '%q ' "$@")
	nix-shell \
		-p 'with import (<komputiloj> + /sources.nix); nixops.value.default' \
		-p 'with import (<komputiloj> + /sources.nix); with komputiloj.value pkgs; wachtwoord' \
		--run "$args_escaped"
}

do_cleanup() {
	local host

	if [[ "$#" -ne 1 ]]; then
		printf 'Usage: %q cleanup HOSTNAME\n' "$0" >&2
		return 1
	fi

	host="$1"
	if [[ "$host" = "$HOSTNAME" ]]; then
		echo "Doing local nix garbage collection..."
		sudo nix-collect-garbage
		echo
		echo "Garbage was collected. However,"
		echo "there might be lingering old system generations:"
		echo
		sudo nix-env -p /nix/var/nix/profiles/system --list-generations
		echo
		echo "To delete:"
		echo "    sudo nix-env -p /nix/var/nix/profiles/system --delete-generations NUMBER..."
		echo "    sudo nix-collect-garbage"
	else
	case "$host" in
		gently)
			# TODO study https://nixos.wiki/wiki/Storage_optimization
			# for an automated solution.
			ssh root@gently.radstand.nl nix-collect-garbage -d
		;;
		*)
			printf "Don't know how to clean up host %q.\n" "$host" >&2
			return 1
		;;
	esac
	fi
}

do_backup() {
	if [[ "$#" -ne 0 ]]; then
		printf 'Usage: %q backup\n' "$0" >&2
		return 1
	fi

	exec sudo -E "$KOMPUTILOJ_PATH"/bin/backup-storage
}

main "$@"
